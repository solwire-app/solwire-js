/*
! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

::before,
::after {
  --tw-content: "";
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
    "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type="button"]),
input:where([type="reset"]),
input:where([type="submit"]) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder,
textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

.box-border {
  box-sizing: border-box;
}

.border-0 {
  border-width: 0;
}

.border-solid {
  border-style: solid;
}

:root {
  --background: 20 14.3% 4.1%;
  --foreground: 0 0% 95%;
  --card: 24 9.8% 10%;
  --card-foreground: 0 0% 95%;
  --popover: 0 0% 9%;
  --popover-foreground: 0 0% 95%;
  --primary: 346.8 77.2% 49.8%;
  --primary-foreground: 355.7 100% 97.3%;
  --secondary: 240 3.7% 15.9%;
  --secondary-foreground: 0 0% 98%;
  --muted: 0 0% 15%;
  --muted-foreground: 240 5% 64.9%;
  --accent: 12 6.5% 15.1%;
  --accent-foreground: 0 0% 98%;
  --destructive: 0 62.8% 30.6%;
  --destructive-foreground: 0 85.7% 97.3%;
  --border: 240 3.7% 15.9%;
  --input: 240 3.7% 15.9%;
  --ring: 346.8 77.2% 49.8%;
  --radius: 0.5rem;
}

.sw-button {
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;

  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;

  cursor: pointer;

  text-transform: none;
}

.sw-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.sw-fixed {
  position: fixed;
}

.sw-absolute {
  position: absolute;
}

.sw-relative {
  position: relative;
}

.sw-inset-0 {
  inset: 0px;
}

.sw-inset-x-0 {
  left: 0px;
  right: 0px;
}

.sw-bottom-0 {
  bottom: 0px;
}

.sw-right-4 {
  right: 1rem;
}

.sw-top-4 {
  top: 1rem;
}

.sw-z-50 {
  z-index: 50;
}

.sw-mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.sw-mt-24 {
  margin-top: 6rem;
}

.sw-mt-4 {
  margin-top: 1rem;
}

.sw-mt-auto {
  margin-top: auto;
}

.sw-inline-block {
  display: inline-block;
}

.sw-flex {
  display: flex;
}

.sw-inline-flex {
  display: inline-flex;
}

.sw-table-cell {
  display: table-cell;
}

.sw-grid {
  display: grid;
}

.sw-hidden {
  display: none;
}

.sw-aspect-square {
  aspect-ratio: 1 / 1;
}

.sw-size-3 {
  width: 0.75rem;
  height: 0.75rem;
}

.sw-size-3\.5 {
  width: 0.875rem;
  height: 0.875rem;
}

.sw-size-4 {
  width: 1rem;
  height: 1rem;
}

.sw-h-10 {
  height: 2.5rem;
}

.sw-h-2 {
  height: 0.5rem;
}

.sw-h-4 {
  height: 1rem;
}

.sw-h-8 {
  height: 2rem;
}

.sw-h-9 {
  height: 2.25rem;
}

.sw-h-auto {
  height: auto;
}

.sw-h-fit {
  height: -moz-fit-content;
  height: fit-content;
}

.sw-h-full {
  height: 100%;
}

.sw-max-h-\[90\%\] {
  max-height: 90%;
}

.sw-w-10 {
  width: 2.5rem;
}

.sw-w-4 {
  width: 1rem;
}

.sw-w-9 {
  width: 2.25rem;
}

.sw-w-\[100px\] {
  width: 100px;
}

.sw-w-auto {
  width: auto;
}

.sw-w-full {
  width: 100%;
}

.sw-max-w-lg {
  max-width: 32rem;
}

.sw-shrink-0 {
  flex-shrink: 0;
}

.sw-caption-bottom {
  caption-side: bottom;
}

.sw-flex-col {
  flex-direction: column;
}

.sw-flex-col-reverse {
  flex-direction: column-reverse;
}

.sw-items-center {
  align-items: center;
}

.sw-justify-center {
  justify-content: center;
}

.sw-gap-0 {
  gap: 0px;
}

.sw-gap-0\.5 {
  gap: 0.125rem;
}

.sw-gap-1 {
  gap: 0.25rem;
}

.sw-gap-1\.5 {
  gap: 0.375rem;
}

.sw-gap-2 {
  gap: 0.5rem;
}

.sw-space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.sw-space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}

.sw-overflow-auto {
  overflow: auto;
}

.sw-overflow-hidden {
  overflow: hidden;
}

.sw-overflow-y-auto {
  overflow-y: auto;
}

.sw-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.sw-whitespace-nowrap {
  white-space: nowrap;
}

.sw-rounded-full {
  border-radius: 9999px;
}

.sw-rounded-lg {
  border-radius: var(--radius);
}

.sw-rounded-md {
  border-radius: calc(var(--radius) - 2px);
}

.sw-rounded-sm {
  border-radius: calc(var(--radius) - 4px);
}

.sw-rounded-t-\[10px\] {
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
}

.sw-border {
  border-width: 1px;
}

.sw-border-b {
  border-bottom-width: 1px;
}

.sw-border-t {
  border-top-width: 1px;
}

.sw-border-border {
  border-color: hsl(var(--border));
}

.sw-border-input {
  border-color: hsl(var(--input));
}

.sw-bg-background {
  background-color: hsl(var(--background));
}

.sw-bg-black\/80 {
  background-color: rgb(0 0 0 / 0.8);
}

.sw-bg-destructive {
  background-color: hsl(var(--destructive));
}

.sw-bg-muted {
  background-color: hsl(var(--muted));
}

.sw-bg-muted\/50 {
  background-color: hsl(var(--muted) / 0.5);
}

.sw-bg-primary {
  background-color: hsl(var(--primary));
}

.sw-bg-secondary {
  background-color: hsl(var(--secondary));
}

.sw-p-0 {
  padding: 0px;
}

.sw-p-2 {
  padding: 0.5rem;
}

.sw-p-4 {
  padding: 1rem;
}

.sw-p-6 {
  padding: 1.5rem;
}

.sw-px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.sw-px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.sw-px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.sw-px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.sw-px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.sw-py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.sw-py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.sw-pb-6 {
  padding-bottom: 1.5rem;
}

.sw-text-left {
  text-align: left;
}

.sw-text-center {
  text-align: center;
}

.sw-align-middle {
  vertical-align: middle;
}

.sw-text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.sw-text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.sw-text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.sw-text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.sw-font-bold {
  font-weight: 700;
}

.sw-font-medium {
  font-weight: 500;
}

.sw-font-normal {
  font-weight: 400;
}

.sw-font-semibold {
  font-weight: 600;
}

.sw-leading-none {
  line-height: 1;
}

.sw-tracking-tight {
  letter-spacing: -0.025em;
}

.sw-text-destructive-foreground {
  color: hsl(var(--destructive-foreground));
}

.sw-text-foreground {
  color: hsl(var(--foreground));
}

.sw-text-muted-foreground {
  color: hsl(var(--muted-foreground));
}

.sw-text-primary {
  color: hsl(var(--primary));
}

.sw-text-primary-foreground {
  color: hsl(var(--primary-foreground));
}

.sw-text-secondary-foreground {
  color: hsl(var(--secondary-foreground));
}

.sw-underline-offset-4 {
  text-underline-offset: 4px;
}

.sw-opacity-70 {
  opacity: 0.7;
}

.sw-shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
    0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.sw-shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),
    0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.sw-shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.sw-ring-offset-background {
  --tw-ring-offset-color: hsl(var(--background));
}

.sw-transition-colors {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.sw-transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.sw-duration-200 {
  transition-duration: 200ms;
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(
        var(--tw-enter-translate-x, 0),
        var(--tw-enter-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1),
        var(--tw-enter-scale, 1)
      )
      rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(
        var(--tw-exit-translate-x, 0),
        var(--tw-exit-translate-y, 0),
        0
      )
      scale3d(
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1),
        var(--tw-exit-scale, 1)
      )
      rotate(var(--tw-exit-rotate, 0));
  }
}

.sw-duration-200 {
  animation-duration: 200ms;
}

.hover\:sw-bg-accent:hover {
  background-color: hsl(var(--accent));
}

.hover\:sw-bg-destructive\/90:hover {
  background-color: hsl(var(--destructive) / 0.9);
}

.hover\:sw-bg-muted\/50:hover {
  background-color: hsl(var(--muted) / 0.5);
}

.hover\:sw-bg-primary\/90:hover {
  background-color: hsl(var(--primary) / 0.9);
}

.hover\:sw-bg-secondary\/80:hover {
  background-color: hsl(var(--secondary) / 0.8);
}

.hover\:sw-text-accent-foreground:hover {
  color: hsl(var(--accent-foreground));
}

.hover\:sw-underline:hover {
  text-decoration-line: underline;
}

.hover\:sw-opacity-100:hover {
  opacity: 1;
}

.focus\:sw-outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:sw-ring-2:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus\:sw-ring-ring:focus {
  --tw-ring-color: hsl(var(--ring));
}

.focus\:sw-ring-offset-2:focus {
  --tw-ring-offset-width: 2px;
}

.focus-visible\:sw-outline-none:focus-visible {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus-visible\:sw-ring-1:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:sw-ring-ring:focus-visible {
  --tw-ring-color: hsl(var(--ring));
}

.disabled\:sw-pointer-events-none:disabled {
  pointer-events: none;
}

.disabled\:sw-opacity-50:disabled {
  opacity: 0.5;
}

.data-\[state\=open\]\:sw-bg-accent[data-state="open"] {
  background-color: hsl(var(--accent));
}

.data-\[state\=selected\]\:sw-bg-muted[data-state="selected"] {
  background-color: hsl(var(--muted));
}

.data-\[state\=open\]\:sw-text-muted-foreground[data-state="open"] {
  color: hsl(var(--muted-foreground));
}

.data-\[state\=open\]\:sw-animate-in[data-state="open"] {
  animation-name: enter;
  animation-duration: 150ms;
  --tw-enter-opacity: initial;
  --tw-enter-scale: initial;
  --tw-enter-rotate: initial;
  --tw-enter-translate-x: initial;
  --tw-enter-translate-y: initial;
}

.data-\[state\=closed\]\:sw-animate-out[data-state="closed"] {
  animation-name: exit;
  animation-duration: 150ms;
  --tw-exit-opacity: initial;
  --tw-exit-scale: initial;
  --tw-exit-rotate: initial;
  --tw-exit-translate-x: initial;
  --tw-exit-translate-y: initial;
}

.data-\[state\=closed\]\:sw-fade-out-0[data-state="closed"] {
  --tw-exit-opacity: 0;
}

.data-\[state\=open\]\:sw-fade-in-0[data-state="open"] {
  --tw-enter-opacity: 0;
}

.data-\[state\=closed\]\:sw-zoom-out-95[data-state="closed"] {
  --tw-exit-scale: 0.95;
}

.data-\[state\=open\]\:sw-zoom-in-95[data-state="open"] {
  --tw-enter-scale: 0.95;
}

.data-\[state\=closed\]\:sw-slide-out-to-left-1\/2[data-state="closed"] {
  --tw-exit-translate-x: -50%;
}

.data-\[state\=closed\]\:sw-slide-out-to-top-\[48\%\][data-state="closed"] {
  --tw-exit-translate-y: -48%;
}

.data-\[state\=open\]\:sw-slide-in-from-left-1\/2[data-state="open"] {
  --tw-enter-translate-x: -50%;
}

.data-\[state\=open\]\:sw-slide-in-from-top-\[48\%\][data-state="open"] {
  --tw-enter-translate-y: -48%;
}

@media (min-width: 640px) {
  .sm\:sw-table-cell {
    display: table-cell;
  }

  .sm\:sw-flex-row {
    flex-direction: row;
  }

  .sm\:sw-justify-end {
    justify-content: flex-end;
  }

  .sm\:sw-space-x-2 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0.5rem * var(--tw-space-x-reverse));
    margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .sm\:sw-text-left {
    text-align: left;
  }
}

@media (min-width: 768px) {
  .md\:sw-mt-48 {
    margin-top: 12rem;
  }

  .md\:sw-inline {
    display: inline;
  }

  .md\:sw-hidden {
    display: none;
  }
}

.\[\&\:\:-webkit-scrollbar\]\:\[width\:0px\]::-webkit-scrollbar {
  width: 0px;
}

.\[\&\:has\(\[role\=checkbox\]\)\]\:sw-pr-0:has([role="checkbox"]) {
  padding-right: 0px;
}

.\[\&\>\[role\=checkbox\]\]\:sw-translate-y-\[2px\] > [role="checkbox"] {
  --tw-translate-y: 2px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.\[\&\>tr\]\:last\:sw-border-b-0:last-child > tr {
  border-bottom-width: 0px;
}

.\[\&_tr\:last-child\]\:sw-border-0 tr:last-child {
  border-width: 0px;
}

.\[\&_tr\]\:sw-border-b tr {
  border-bottom-width: 1px;
}
